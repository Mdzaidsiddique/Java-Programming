functional programming (declarative):
- what to solve : focus on results not process, [in contrast to an imperative: how to solve]
- de-compose the problems into functions

in FP, functions are treated as 1st-class citizens

Functional Interface: (@FunctionalInterface -> java.lang package : not compulsory)
    - an interface which has only one abstract method (also known as SAM(I): single abstract method interface)
    - it may have multiple default, static methods but can have only one abstract method
    - it can have methods of object class also

Pre-defined Functional Interface:
    - java.lang.Comparable -> public int compareTo(Object obj)
    - java.util.Comparator -> public int compare(Object obj1, Object obj2)

implementing functional interface:
1) using anonymous inner class:
   Interface-name obj-name = new Interface(){
       implementation of methods defined in Interface-name
   };

2) using lambda expression




























functional interface
annonymous inner class
lambda expression
method reference



wed
thur
fri
sat
sun
----
DB (subQueries, Normalization, advFunctions)
+
AdvJava (streamAPI, FunctionalP, CovContraV)

JDBC:
Hibernate:
Spring:
Springboot:
Authntication (